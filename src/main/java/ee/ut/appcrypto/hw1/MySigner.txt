package hw1;

import java.security.Key;

/*
 * Class with signing and signature verification methods.
 * 
 * You will have to implement 4 methods:
 *   - DSA signing
 *   - DSA verification
 *   - RSA signing
 *   - RSA verification
 * 
 * Note that you are *not* allowed to change method signatures (adding exception,
 * changing return type, etc.) in any other ways than it is requested in the task.
 * 
 * Tasks in this file will give you 4 points.
 */
public class MySigner {
	public static byte[] dsaSign(byte[] data, Key signingKey) {
		// FIXME (1p) Implement DSA signing, replace `null` with actual signature value
		return null;
	}

	// FIXME Replace Key type with a proper type from java.security.* package
	public static boolean dsaVerify(byte[] data, byte[] signature, Key verificationKey) {
		// FIXME (1p) Implement DSA verification, replace `false` with actual result (true|false)
		return false;
	}

	// FIXME Replace Key type with a proper type from java.security.* package
	public static byte[] rsaSign(byte[] data, Key signingKey) {
		// FIXME (1p) Implement RSA signing, replace `null` with actual signature value
		return null;
	}

	// FIXME Replace Key type with a proper type from java.security.* package
	public static boolean rsaVerify(byte[] data, byte[] signature, Key verificationKey) {
		// FIXME (1p) Implement RSA verification, replace `false` with actual result (true|false)
		return false;
	}

	// Hints:
	//    You may want to use java.security.Signature class.
	//    You may want to create private methods sign(alg, data, signingKey) and
	//      verify(alg, data, signature, verificationKey) and use them from public methods.
	//      Signing and verification procedures for RSA nd DSA are very similar.
}
